# Generated by Django 5.2.5 on 2025-08-28 11:28

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('serial_number', models.CharField(max_length=255, unique=True)),
                ('model', models.CharField(max_length=255)),
                ('firmware_version', models.CharField(blank=True, max_length=100)),
                ('api_key', models.CharField(max_length=255, unique=True)),
                ('api_secret', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance'), ('offline', 'Offline')], default='active', max_length=20)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FirmwareBundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=100, unique=True)),
                ('hash', models.CharField(max_length=128)),
                ('channel', models.CharField(choices=[('stable', 'Stable'), ('beta', 'Beta'), ('dev', 'Development')], default='stable', max_length=20)),
                ('rollout_policy', models.CharField(choices=[('immediate', 'Immediate'), ('staged', 'Staged'), ('manual', 'Manual')], default='staged', max_length=20)),
                ('supported_models', models.JSONField(default=list, help_text='List of supported device models')),
                ('release_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampling_rates', models.JSONField(default=dict, help_text='Sampling rates for different sensors')),
                ('thresholds', models.JSONField(default=dict, help_text='Alert thresholds')),
                ('ntp_servers', models.JSONField(default=list, help_text='NTP server endpoints')),
                ('endpoints', models.JSONField(default=dict, help_text='API endpoints configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='devices.device')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'customer')},
            },
        ),
        migrations.AddField(
            model_name='device',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='devices.site'),
        ),
    ]
