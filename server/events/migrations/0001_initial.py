# Generated by Django 5.2.5 on 2025-08-28 11:28

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assets', '0001_initial'),
        ('devices', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('event_type', models.CharField(max_length=255)),
                ('conditions', models.JSONField(help_text='Alert trigger conditions')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('notification_channels', models.JSONField(default=list, help_text='Email, SMS, Slack, webhook URLs')),
                ('escalation_rules', models.JSONField(blank=True, default=dict, help_text='Escalation configuration')),
                ('cooldown_minutes', models.PositiveIntegerField(default=60, help_text='Minimum time between alerts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to='assets.asset')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to='devices.device')),
            ],
            options={
                'unique_together': {('name', 'device', 'asset')},
            },
        ),
        migrations.CreateModel(
            name='SystemEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=255)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('suppressed', 'Suppressed')], default='active', max_length=20)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='system_events', to='devices.device')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recipients', models.JSONField(help_text='List of recipients with contact info')),
                ('channel', models.CharField(help_text='Email, SMS, Slack, webhook', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('retry', 'Retry')], default='pending', max_length=20)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alert_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='events.alertrule')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='events.systemevent')),
            ],
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(help_text='Action taken or event detail', max_length=255)),
                ('details', models.JSONField(blank=True, default=dict, help_text='Full context and metadata')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='events.systemevent')),
            ],
        ),
        migrations.AddIndex(
            model_name='systemevent',
            index=models.Index(fields=['device', 'created_at'], name='events_syst_device__499520_idx'),
        ),
        migrations.AddIndex(
            model_name='systemevent',
            index=models.Index(fields=['event_type', 'created_at'], name='events_syst_event_t_23de9f_idx'),
        ),
        migrations.AddIndex(
            model_name='systemevent',
            index=models.Index(fields=['severity', 'created_at'], name='events_syst_severit_d6faea_idx'),
        ),
        migrations.AddIndex(
            model_name='systemevent',
            index=models.Index(fields=['status', 'created_at'], name='events_syst_status_bb18c9_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['status', 'created_at'], name='events_noti_status_68e887_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['next_retry_at'], name='events_noti_next_re_de3d76_idx'),
        ),
        migrations.AddIndex(
            model_name='eventlog',
            index=models.Index(fields=['event', 'timestamp'], name='events_even_event_i_e9ea17_idx'),
        ),
        migrations.AddIndex(
            model_name='eventlog',
            index=models.Index(fields=['timestamp'], name='events_even_timesta_f13b35_idx'),
        ),
    ]
